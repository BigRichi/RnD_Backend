c
user.authenticate(params[:password])
c
user.authenticate(params[:password])
c
user
params[:password]
user.authenticate(params[:password])
c
user.authenticate(params[:password_digest])
c
params[:password_digest]
user.authenticate(params[:password_digest])
user
params
c
params
c
params
c
params.permit(:username, :password_digest, :rank, :high_score)
params
c
params
c
params.permit!()
params
c
params
c
new_user
c
new_user
c
new_game
exit
@user["password"]
@user["password_digest"]
@user["username"]
@user["username']
@user.username
@user
c
params[:game_type]
params
q
c
params[:game_type]
params[:score]
params
c
@game
c
params
c
questions
resp
uri
c
form_answers.num_of_questions
form_answers["num_of_questions"]
c
form_answers["num_of_question"]
form_answers["num_of_questions"]
form_answers["num_of_question"]
form_answers["num_of_questions"]
c
form_answers["num_of_questions"]
c
form_answers["num"]
form_answers["difficulty"]
form_answers["category"]
form_answers["num_of_questions"]
form_answers["category"]
form_answers["category']
form_answers
:difficulty
form_answers
params
num_of_questions
form_answers.category
form_answers.num_of_questions
form_answers
params
c
uri
c
uri
params
q
exit
params
c
form_answers
c
form_answers
params
c
form_answers
params
c
form_answers
params
q
params
q
params
q
params
q
params
q
question
exit
ques["incorrect_answers"]
question
exit
ques["incorrect_answers"]
ques["inccorrect_answers"]
question
exit
question
exit
ques['incorrect_answers']
ques
exit
q
question
q
question
q
question
q
question
c
question
q
question
q
question
question["incorrect_answers"]
questions["incorrect_answers"]
questions.incorrect_answers
questions[incorrect_answers]
Question.new(question)
question
q
question
fuckyes
q
questions["results"].second["incorrect_answers"]
questions["results"].first["incorrect_answers"]
questions["results"].first["category"]
questions["results"].first.category
questions["results"]["category"]
questions["results"].category
questions["results"].questions
questions["results"].question
questions["results"][0]
questions[0]
questions["results"].each { |q| q[0] }
questions["results"].each { |q| q }
questions["results"].map { |q| n=0, q[n], n++}
questions["results"].map{  |q| q }.length
questions["results"].map{  |q| q }
questions["results"].map{  |q| q["question"] }
questions["results"].map do |q| q[question] end
questions["results"].map do |q| q.question end
questions["results"].map do |q|( q.question) end
questions["results"].map |q|( q.question)
questions["results"].map |q| q.question
questions["results"]
questions.["results"]
questions.results
questions.result
questions
q
y
q
richi["results"][2]
richi["results"][20]
richi["results"][0]
richi["results"]
richi["result"]
richi[0]
richi.last
richi.first[4]
richi[4]
richi.first
richi.neck
richi.body
richi = JSON.parse(resp)
q
JSON.parse(resp)
resp
q
resp.body
resp
JSON.parse(resp)
JSON.parse(uri)
q
resp
q
uri
